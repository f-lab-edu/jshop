plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
}

allprojects {
    group = 'jshop'
    version = '0.1.0'

    java {
        sourceCompatibility = '17'
    }

    repositories {
        mavenCentral()
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        // spring
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        // spring

        // utils
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
        implementation 'org.springframework.retry:spring-retry'
        implementation 'org.springframework.data:spring-data-envers'
        // utils

        // test
        implementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        implementation 'org.testcontainers:testcontainers:1.20.0'
        implementation 'org.testcontainers:junit-jupiter:1.20.0'
        implementation 'org.testcontainers:mysql:1.20.0'
        implementation "com.redis:testcontainers-redis:2.2.2"
        // test
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(':web') {
    dependencies {
        implementation project(':core')
        implementation project(':common')

        // spring
        implementation 'org.springframework.boot:spring-boot-starter-web'
        // spring

        // actuator
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'io.micrometer:micrometer-registry-prometheus'
        // actuator

        // swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
        // swagger

        //jwt
        implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
        implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
        // jwt

        // test
        implementation 'org.springframework.security:spring-security-test'
        // test
    }
}

project(':batch') {
    dependencies {
        implementation project(':core')
        implementation project(':common')
        implementation project(':infra')

        implementation 'net.datafaker:datafaker:2.3.1'
    }
}

project(':common') {
}

project(':infra') {
    dependencies {

        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.redisson:redisson-spring-boot-starter:3.33.0'
        // redis
    }
}

project(':core') {
    dependencies {
        implementation project(':infra')
        implementation project(':common')

        runtimeOnly 'com.mysql:mysql-connector-j'

        //QueryDSL
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        //QueryDSL
    }
}