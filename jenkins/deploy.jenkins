pipeline {
    agent any
    
    environment {        
        NCLOUD_ACCESS_KEY_ID = credentials('NCLOUD_ACCESS_KEY_ID')
        NCLOUD_SECRET_KEY = credentials('NCLOUD_SECRET_KEY')

        MYSQL_HOST = credentials('MYSQL_HOST')
        MYSQL_PORT = credentials('MYSQL_PORT')
        MYSQL_USERNAME = credentials('MYSQL_USERNAME')
        MYSQL_PASSWORD = credentials('MYSQL_PASSWORD')


        JWT_SECRET_KEY = credentials('JWT_SECRET_KEY')
        REDIS_HOST = credentials('REDIS_HOST')
        REDIS_PORT = credentials('REDIS_PORT')
        REDIS_PASSWORD = credentials('REDIS_PASSWORD')
        VERSION = '0.1.1-nolog'
        IMAGE = 'jshop.kr.ncr.ntruss.com/jshop'
    }

    stages {
        /*
        stage('Test') {
            steps {
                script {
                    echo 'Test'
                    sh './gradlew clean test'
                }
            }
        }
        */

        stage('Build') {
            steps {
                script {
                    echo 'build'
                    sh "docker build -t ${IMAGE}:${VERSION} --build-arg LOGSTASH_HOST='elk_logstash' --build-arg LOGSTASH_PORT='5010' --build-arg VERSION=${VERSION} --build-arg MYSQL_HOST=${MYSQL_HOST} --build-arg MYSQL_PORT=${MYSQL_PORT} --build-arg MYSQL_USERNAME=${MYSQL_USERNAME} --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD} --build-arg JWT_SECRET_KEY=${JWT_SECRET_KEY} --build-arg REDIS_HOST=${REDIS_HOST} --build-arg REDIS_PORT=${REDIS_PORT} --build-arg REDIS_PASSWORD=${REDIS_PASSWORD} ."
                }
            }
        }

        stage('NCR_Push') {
            steps {
                script {
                    echo 'push'
                    sh "echo ${NCLOUD_SECRET_KEY} | docker login jshop.kr.ncr.ntruss.com -u ${NCLOUD_ACCESS_KEY_ID} --password-stdin"                
                    sh "docker push ${IMAGE}:${VERSION}"
                }
            }
        }
        /*
        stage('Deploy') {
            steps {
                script {
                    def SERVERS = [:]
                    configFileProvider([configFile(fileId: 'a05b0d1b-420b-4e46-a827-9b7bae9b7e25', variable: 'JSON_CONFIG_FILE')]) {
                        def jsonContent = readFile(file: JSON_CONFIG_FILE)
                                            
                        def jsonConfig = new groovy.json.JsonSlurper().parseText(jsonContent)
                        SERVERS = jsonConfig.servers
                    }
                    
                    SERVERS.each { server ->
                        sshagent(['ssh-deploy-key']) {
                            sh "ssh jhkim@${server} 'echo $NCLOUD_SECRET_KEY | docker login jshop.kr.ncr.ntruss.com -u ${NCLOUD_ACCESS_KEY_ID} --password-stdin'"
                            sh "ssh jhkim@${server} 'docker service update --image ${IMAGE}:${VERSION} jshop_jshop --with-registry-auth'"
                        }
                    }                                            
                }
            }
        }
        */
    }
}